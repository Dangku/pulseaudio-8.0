Subject: Extend droid module to acept further config parameters
Author: Rex Tsai <rex.tsai@canonical.com>
Forwarded: no

Index: pulseaudio/src/modules/droid/droid-util.c
===================================================================
--- pulseaudio.orig/src/modules/droid/droid-util.c
+++ pulseaudio/src/modules/droid/droid-util.c
@@ -1134,7 +1158,6 @@ static void add_i_port(pa_droid_mapping
 static void add_i_ports(pa_droid_mapping *am) {
     pa_droid_port *p;
     const char *name;
-    char *desc;
     uint32_t devices;
     uint32_t i = 0;
 
@@ -1697,11 +1723,27 @@ pa_droid_stream *pa_droid_open_input_str
                                             &config_in,
                                             &stream
 #if DROID_HAL >= 3
-                                                  , AUDIO_INPUT_FLAG_NONE   /* Default to no input flags */
-                                                  , NULL                    /* Don't define address */
-                                                  , AUDIO_SOURCE_DEFAULT    /* Default audio source */
+                                            , AUDIO_INPUT_FLAG_NONE   /* Default to no input flags */
+                                            , NULL                    /* Don't define address */
+                                            , AUDIO_SOURCE_DEFAULT    /* Default audio source */
 #endif
                                                   );
+    /* On some devices the first call will fail if the config parameters are
+     * not supported, but it'll automatically set the right ones, expecting
+     * the caller to call it again, so let's try at least one more time */
+    if (!stream)
+        ret = module->device->open_input_stream(module->device,
+                                                module->stream_in_id++,
+                                                devices,
+                                                &config_in,
+                                                &stream
+#if DROID_HAL >= 3
+                                                , AUDIO_INPUT_FLAG_NONE   /* Default to no input flags */
+                                                , NULL                    /* Don't define address */
+                                                , AUDIO_SOURCE_DEFAULT    /* Default audio source */
+#endif
+                );
+
     pa_droid_hw_module_unlock(module);
 
     if (ret < 0 || !stream) {
@@ -1715,6 +1757,22 @@ pa_droid_stream *pa_droid_open_input_str
     s->channel_map = channel_map;
     s->flags = 0;
 
+    if (s->in->common.get_channels(&s->in->common) != hal_channel_mask) {
+        pa_log_warn("Requested channel mask %u but got %u instead.", hal_channel_mask, config_in.channel_mask);
+        /* convert the channel mask back to pa_channel_map 
+         * some device support only mono channel.
+         * */
+        pa_channel_position_t c;
+        if (pa_convert_input_channel(config_in.channel_mask, CONV_FROM_HAL, &c) && (c == PA_CHANNEL_POSITION_MONO)) {
+            s->channel_map.channels = 1;
+            s->channel_map.map[0] = PA_CHANNEL_POSITION_MONO;
+            s->sample_spec.channels = 1 ;
+        } else {
+            pa_log("Failed to convert channel map.");
+            goto fail;
+        }
+    }
+
     if ((s->sample_spec.rate = s->in->common.get_sample_rate(&s->in->common)) != spec->rate)
         pa_log_warn("Requested sample rate %u but got %u instead.", spec->rate, s->sample_spec.rate);
 
@@ -1727,7 +1785,7 @@ pa_droid_stream *pa_droid_open_input_str
             devices,
             s->flags,
             s->sample_spec.rate,
-            s->sample_spec.channels, hal_channel_mask,
+            s->sample_spec.channels, config_in.channel_mask,
             s->sample_spec.format, hal_audio_format,
             buffer_size,
             pa_bytes_to_usec(buffer_size, &s->sample_spec));
